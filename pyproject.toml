[tool.poetry]
name = "innofw"
version = "1.0.0"
description = ""
authors = ["Kazybek Askarbek <k.askarbek@innopolis.university>"]

[[tool.poetry.source]]
name = "cudatorch"
url = "https://download.pytorch.org/whl/cu113"
priority = "supplemental"

[tool.poetry.dependencies]
python = ">=3.8,<3.10"
python-dotenv = "^0.20.0"



torch = {version = "1.11.0", source = "cudatorch"}
torchvision = {version = "0.12.0", source = "cudatorch"}

numpy = "1.21.1"
pillow = "9.1.0"

tqdm = "^4.64.0"
h5py = "^3.7.0"
streamlit = "^1.10.0"
albumentations = "1.1.0"
pytorch-lightning = "1.8.0"
xgboost = "^1.6.1"
hydra-core = "^1.2.0"
segmentation-models-pytorch = "0.3.3"
pytorch-toolbelt = "0.6.2"
rasterio = "^1.2.10"
pydantic = "^1.9.1"
minio = "^7.1.10"
patool = "^1.12"
catboost = "^1.0.6"
rdkit-pypi = "^2022.3.4"
deepchem = "^2.6.1"
pydicom = "^2.3.0"
urlpath = "^1.2.0"
transformers = "^4.21.2"
datasets = "^2.4.0"
onvif-zeep = "^0.2.12"
fire = "^0.4.0"
yolov5 = "7.0.7"
streamlit-pydantic = "^0.5.0"
selfies = "^2.1.1"
setuptools = "^65.4.1"
wheel = "^0.37.1"
lovely-tensors = "^0.1.14"
lovely-numpy = "^0.2.8"
wandb = "^0.13.9"
aeronet = "^0.0.18"
ultralytics = "8.0.124"
clearml = "^1.13.0"
dash-bootstrap-components = "^1.4.1"
dash-core-components = "^2.0.0"
dash-html-components = "^2.0.0"
dash-table = "^5.0.0"
dill = "^0.3.6"
diskcache = "^5.6.1"
Flask = "^2.2.3"
dvc = "^3.30.1"
dvc-s3 = "^2.23.0"

open3d = "^0.18.0"
mmengine = "^0.10.4"
numba = "^0.58.0"
mmdet3d = "^1.4.0"
mmdet = {git = "https://github.com/BarzaH/mmdetection"}

[tool.poetry.dev-dependencies]
mock = "^4.0.3"
pytest-mock = "^3.7.0"
coverage = "^6.4.1"
pytest-cov = "^3.0.0"
pytest = "^7.1.2"
pre-commit = "^2.19.0"
black = "^22.6.0"
mypy = "^0.971"


[tool.poetry.extras]
clearml = ["clearml"]
dui = ["dash-bootstrap-components", "dash-core-components", "dash-html-components", "dash-table", "dill", "diskcache", "Flask"]
dvc = ["dvc", "dvc-s3"]

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.21.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
#log_cli = true
#log_cli_level = "INFO"

filterwarnings = [
#    "error",
    "ignore::DeprecationWarning",
#    # note the use of single quote below to denote "raw" strings in TOML
#    'ignore:function ham\(\) is deprecated:DeprecationWarning',
]
